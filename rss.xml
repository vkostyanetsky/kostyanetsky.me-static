<rss version="2.0">
    <channel>    
        <title>Vlad Kostyanetsky</title>
        <description>Hello! My name is Vlad, I'm business app developer.</description>
        <language>en</language>
        <link>https://kostyanetsky.me</link>
        <lastBuildDate>Sun, 25 Sep 2022 19:02:53 +0700</lastBuildDate>
        
        <item>
            <title>Slack Advises</title>
            <link>https://kostyanetsky.me/notes/slack/</link>
            <guid isPermaLink="false">note-slack</guid>
            <pubDate>Sun, 25 Sep 2022 19:02:53 +0700</pubDate>
            <description><p class="measure-wide">Slack, of course, is a thing to scold. For being slow, for having bugs, for notifications. But I just love his stubs in case there are no new messages.</p>
<p class="measure-wide">Look at this cuteness:</p>
<p class="measure-wide"><img alt="All done. The future is yours." src="https://kostyanetsky.me/notes/slack/all-done.png"/> <img alt="All clear." src="https://kostyanetsky.me/notes/slack/all-clear.png"/></p>
<p class="measure-wide">Why do we need psychotherapists at all?</p>
<p class="measure-wide"><img alt="You're up to date. Go forth and do great things." src="https://kostyanetsky.me/notes/slack/up-to-date.png"/> <img alt="Done and done." src="https://kostyanetsky.me/notes/slack/done-and-done.png"/></p>
<p class="measure-wide">Or this:</p>
<p class="measure-wide"><img alt="You're all read. Here is a tractor." src="https://kostyanetsky.me/notes/slack/here-is-tractor.png"/></p>
<p class="measure-wide">Geez-Louise, Slack, hold on. You're not the first who advices this, believe me.</p></description>
        </item>
        
        <item>
            <title>Shaken, Not Stirred</title>
            <link>https://kostyanetsky.me/notes/shaken-not-stirred/</link>
            <guid isPermaLink="false">note-shaken-not-stirred</guid>
            <pubDate>Sun, 07 Aug 2022 19:04:51 +0700</pubDate>
            <description><p class="measure-wide">Let's speak a bit about organization of the code. If you need to describe a set of objects with common properties, think about whether this description should be divided into separate methods, each of which intended to describe one specific object?</p>
<p class="measure-wide">Let's look at this example — a method that describes tabular parts of documents suitable for some task:</p>
<pre><code>SupportedTypes["Document.SupplierPricesEntering"]   = "Prices";
SupportedTypes["Document.OpeningBalancesEntering"]  = "CustomerAccounts,VendorAccounts";
SupportedTypes["Document.Requisition"]              = "InventoryAndServices";
</code></pre>
<p class="measure-wide">Everything seems fine, right? Descriptions are there; tabular parts are listed; splitting them by comma doesn't look expensive at all.</p>
<p class="measure-wide">However, there are many documents in the method. Eventually, some colleague (or you) will need to refer to another tabular part of the document, which is already mentioned in the method. Something will distract they, they will forget to look for an existing line and something like this will turn out:</p>
<pre><code>SupportedTypes["Document.SupplierPricesEntering"]   = "Prices";
SupportedTypes["Document.OpeningBalancesEntering"]  = "CustomerAccounts,VendorAccounts";
SupportedTypes["Document.Requisition"]              = "InventoryAndServices";

&lt;...&gt;

SupportedTypes["Document.OpeningBalancesEntering"]  = "PayrollDeductions";
</code></pre>
<p class="measure-wide">As a result, a part of description will be erased, and it's good if the related functionality is covered by tests.</p>
<p class="measure-wide">Conclusion? Well, you can write a helper method that will take the document type and the name of <strong>one</strong> table part as input. The helper will add items to the SupportedTypes map and ensure that the data already added is not lost.</p>
<p class="measure-wide">However, if you need a better solution, then consider doing as I wrote at the beginning of this note: split the method into auxiliary methods. One method contains description for one document only (for all its tabular sections). Something like:</p>
<pre><code>Procedure AddOpeningBalancesEnteringDocument(SupportedTypes)

    TabularSections = New Array;

    TabularSections.Add("CustomerAccounts");
    TabularSections.Add("VendorAccounts");
    TabularSections.Add("PayrollDeductions");

    SupportedTypes["Document.Requisition"] = StrConcat(TabularSections, ",");

EndProcedure
</code></pre>
<p class="measure-wide">What do we get here? Firstly, nobody will accidentally erase the description of the document. Secondly, SonarQube will be pleased: it is highly likely to begin swearing at repeating literals with the names of tabular parts, if the helper is implemented instead of code splitting.</p></description>
        </item>
        
        <item>
            <title>Not, But!</title>
            <link>https://kostyanetsky.me/notes/not-but/</link>
            <guid isPermaLink="false">note-not-but</guid>
            <pubDate>Sat, 23 Jul 2022 11:32:48 +0700</pubDate>
            <description><p class="measure-wide">Someone told me about the Croatian comic strips <a class="link blue dim bb" href="http://www.to-zo.com/notbut" target="_blank">NOT/BUT</a> at the beginning of last year, when I was seriously learning to draw. Each strip there is about some kind of traumatic or simply gloomy thought that comes into the artist’s head while working. The idea is to push a reader in the right direction and give them a more practical perspective on the situation they're in.</p>
<p class="measure-wide">I quit drawing a year later, at the end of February: it became clear that I no longer had time for a hobby. But comics are completely universal; look through, even if you have no idea what a kneaded eraser is :-)</p>
<p class="measure-wide"><a href="http://www.to-zo.com/notbut" target="_blank"><img alt="What the actual fuck?" src="https://kostyanetsky.me/notes/not-but/mistakes.png"/></a></p>
<p class="measure-wide">All these endless soul-searching are well known to any professional, and the way out of them is not always obvious. Especially if you are angry, tired, and the deadline for the project expired somewhere last week.</p></description>
        </item>
        
        <item>
            <title>Okay!</title>
            <link>https://kostyanetsky.me/notes/ok/</link>
            <guid isPermaLink="false">note-ok</guid>
            <pubDate>Fri, 22 Jul 2022 13:13:00 +0700</pubDate>
            <description><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/GuIPxcXwF30" width="560"></iframe>
<p class="measure-wide">Oh, shoot! Just watched the video and realized that I got used to writing OK in morning statuses when asked “how do you feel today”. Like, everything is normal with me, I'm alive and doing well, nothing affects my work, etc.</p>
<p class="measure-wide">Now I'm afraid to guess what colleagues thought about me. I hope they also did not know that okay in the answer to such a question does not mean okay at all :-)</p></description>
        </item>
        
        <item>
            <title>Cookie Jar</title>
            <link>https://kostyanetsky.me/notes/cookie-jar/</link>
            <guid isPermaLink="false">note-cookie-jar</guid>
            <pubDate>Sat, 28 May 2022 21:34:38 +0700</pubDate>
            <description><p class="measure-wide">The other day, I was working with cookies in one of my scripts. While searching for the optimal solution, I came across an absolutely charming (100% working, by the way) <a class="link blue dim bb" href="https://stackoverflow.com/questions/13030095/how-to-save-requests-python-cookies-to-a-file" target="_blank">tip</a> from StackOverflow:</p>
<blockquote>
<p class="measure-wide">You can get a CookieJar object from the session with session.cookies, and use pickle to store it to a file.</p>
</blockquote>
<p class="measure-wide">So, literally: keep your cookies in a jar, and to store them, pickle them. The jar with pickled cookies, by the way, can be put on the shelf later.</p>
<p class="measure-wide">How can you not love python after that, huh?</p>
<p class="measure-wide">P.S. While writing this post, I got curious – why pickle and not serialization? So, briefly: <a class="link blue dim bb" href="https://stackoverflow.com/questions/27324986/pickles-why-are-they-called-that/27325007#27325007" target="_blank">this is the way</a>.</p></description>
        </item>
        
        <item>
            <title>No More Embedded Tweets</title>
            <link>https://kostyanetsky.me/notes/no-more-embedded-tweets/</link>
            <guid isPermaLink="false">note-no-more-embedded-tweets</guid>
            <pubDate>Mon, 21 Mar 2022 20:25:48 +0700</pubDate>
            <description><p class="measure-wide">As soon as I <a class="link blue dim bb" href="https://kostyanetsky.me/notes/no-more-google-fonts/" target="_blank">removed</a> Google Fonts from my blog, I had to remove embedded tweets as well.</p>
<p class="measure-wide">How did it work before? I want to link a tweet — I simply insert the link to it. The build script replaces it with an HTML block, then Twitter founds this block and replaces it with the text of the tweet (and some useful links as well). This <a class="link blue dim bb" href="https://github.com/vkostyanetsky/BlogBuilder/commit/c21ef8a7bec10672406e6be57b8e734ba3ac01c5" target="_blank">commit</a> shows you how it worked.</p>
<p class="measure-wide">How does it work now? You're right, it does not! Twitter is blocked in Russia, so its javascript works with VPN enabled only.</p>
<p class="measure-wide"><img alt="Well" src="https://kostyanetsky.me/notes/no-more-embedded-tweets/well.jpg"/></p>
<p class="measure-wide">The solution: I had to screen all the tweets that I once referred to and add them to the notes in the form of pictures with links. Whoever needs the original will turn on VPN and go to Twitter, and the rest, at least, can read the text.</p>
<p class="measure-wide">A few words about the technical side. I was too lazy to screen each tweet manually, so I was thinking about how to automate the process. At first, I came across only services that were ready to solve the problem for some pathetic ten dollars (thanks guys, maybe, one day…), but then I came across the perfect <a class="link blue dim bb" href="https://github.com/privatenumber/snap-tweet" target="_blank">tool</a>: a console script for Node.js.</p>
<p class="measure-wide">Nothing that you don't need. Pure functionality. You give a tweet to it. It gives you a picture back:</p>
<blockquote>
<p class="measure-wide">npx snap-tweet https://twitter.com/PossumEveryHour/status/1506148678461014016</p>
</blockquote>
<p class="measure-wide">That's all. I want to donate the author, really.</p>
<p class="measure-wide">I thought about attaching snap-tweet to my build script (so that it would be like before: I insert a link to a tweet, and then it generates a picture by itself and puts it where it needs to be). Decided that I'm not gonna do it. Rude violation of KISS, and indeed… There's enough entropy in the world so far. Especially now.</p></description>
        </item>
        
        <item>
            <title>Do Not Confuse</title>
            <link>https://kostyanetsky.me/notes/do-not-confuse/</link>
            <guid isPermaLink="false">note-do-not-confuse</guid>
            <pubDate>Wed, 16 Mar 2022 20:09:31 +0700</pubDate>
            <description><p class="measure-wide"><img alt="Code" src="https://kostyanetsky.me/notes/do-not-confuse/do-not-confuse.png"/></p>
<p class="measure-wide">If the type of operation is the sale of goods or real estate, then open the common form AdvancesPickFormWithVAT with the parameters defined in the PickParameters structure. The callback is EditPrepaymentOffsetEnd method, defined in the same module; pass it the AdditionalParameters structure. The form needs to be opened so that it locks the whole interface.</p>
<p class="measure-wide">However, if the type of operation is a return to the supplier, then open the general form AdvancesPickFormWithVAT with the parameters defined in the PickParameters structure. The callback is the EditPrepaymentOffsetEnd method, defined in the same module; pass it the AdditionalParameters structure. The form needs to be opened so that it locks the whole interface.</p>
<p class="measure-wide">I hope you won't confuse.</p></description>
        </item>
        
        <item>
            <title>No More Google Fonts</title>
            <link>https://kostyanetsky.me/notes/no-more-google-fonts/</link>
            <guid isPermaLink="false">note-no-more-google-fonts</guid>
            <pubDate>Sat, 19 Feb 2022 20:25:48 +0700</pubDate>
            <description><p class="measure-wide"><a href="https://twitter.com/PixelAmbacht/status/1494272370076536840" target="_blank"><img alt="Tweet" src="https://kostyanetsky.me/notes/no-more-google-fonts/snap-tweet-PixelAmbacht-1494272370076536840.png"/></a></p>
<p class="measure-wide">A year ago, damn it. Okay, hello everyone! Johnny Slowpoke is here! Today we will throw out Google Fonts from my blog. I used to load the main font (PT Sans) from this service, but it makes almost no sense without cross-domain caching. Frankly speaking, the only point to do this further is if a server on which the site is running is slow, so it is faster to load fonts from Google. </p>
<p class="measure-wide">I host my blog on GitHub servers and have no complaints about performance. So, I'm self-hosting PT Sans now, and you know what? The difference is dramatic. When updating a page before, there was clearly a noticeable delay between loading the page and loading the font. For now, it is barely recognizable. If you have a blog and want to try to self-host fonts — here is a cool <a class="link blue dim bb" href="https://google-webfonts-helper.herokuapp.com/fonts" target="_blank">service</a> that solves the problem in a few clicks.</p>
<p class="measure-wide">Don't forget to put a big, nice star on the <a class="link blue dim bb" href="https://github.com/majodev/google-webfonts-helper" target="_blank">repository</a>!</p></description>
        </item>
        
        <item>
            <title>Totals of 2021</title>
            <link>https://kostyanetsky.me/notes/totals-of-2021/</link>
            <guid isPermaLink="false">note-totals-of-2021</guid>
            <pubDate>Tue, 08 Feb 2022 13:25:00 +0700</pubDate>
            <description><p class="measure-wide">It is a bit late to sum up, isn't it? Well, the previous couple of months have been, um, tight, so I had no actual time  to sit down and think. Now I'm on vacation for 2021 – so no time like the present. I'm writing, like, from the past.</p>
<p class="measure-wide">Write out each achievement doesn't attract me at all. The year definitely turned out to be good: I did a lot of complex work on FirstBit ERP (wrote new modules, rewrote existing ones, crushed bugs, wrote functional and load tests – yes, there were countless things). This had a good effect both on the configuration itself and on the profits of my company. In addition, I passed 1C expert exam and a PostgreSQL professional exam. Hip-hip-hooray.</p>
<p class="measure-wide">There were fails as well. I still feel lazy to jot them down, but the main one is obvious – I became monstrously fat and instead of losing ten kilograms (that was the original plan) – I gained five more.</p>
<p class="measure-wide">Looking back, the root of most of the problems over the past year is this: I focused too much on task flow. They were all interesting in their own way, from a carefully written technical task to challenges like “find a problem in the code using your witcher's instincts”. You do one task, another, a third, a hundredth, and you do not notice that you have ignored almost everything except work. As a result, you get a lot of experience, but the world dries up to the Configurator window and there is no strength to somehow apply this experience. Unhealthy bullshit.</p>
<p class="measure-wide">In short, if you imagine me as a character in some video game, it looks like this: attack and intelligence have grown noticeably over the year, but health, agility, charisma, and almost everything else in general, have dropped. Now I need to do something to deal with this mess.</p>
<p class="measure-wide">You know what? I'll take ten kilometers run for a start.</p>
<p class="measure-wide"><a href="https://twitter.com/EffinBirds/status/1329575199667347459" target="_blank"><img alt="Tweet" src="https://kostyanetsky.me/notes/totals-of-2021/snap-tweet-EffinBirds-1329575199667347459.png"/></a></p>
<p class="measure-wide">Maybe, birdie, maybe.</p></description>
        </item>
        
        <item>
            <title>Reuse Carefully</title>
            <link>https://kostyanetsky.me/notes/reuse-carefully/</link>
            <guid isPermaLink="false">note-reuse-carefully</guid>
            <pubDate>Tue, 08 Feb 2022 09:00:11 +0700</pubDate>
            <description><p class="measure-wide">I'll tell you about a funny and a little embarrassing case that I took apart in January. The essence in a nutshell: a huge auto-test based on Vanessa, which is intended to check the VAT calculation, falls somewhere near the end.</p>
<p class="measure-wide">I start investigating. First, I look at the screenshots in Allure: OK, the reason is obvious – in one of the documents, the conditional appearance for the field with the VAT amount doesn't work. The test expected it to be unavailable if the VAT rate is zero, but it turned out to be available somehow.</p>
<p class="measure-wide">It's a mess, it needs to be fixed! I look at the condition in the code: well, it locks the field if the VAT rate is in the list of “zero” rates (list of VAT rates whose rate is equal to zero). Everything appears to be simple and logical. What the hell could possibly go wrong here?</p>
<p class="measure-wide"><a href="https://twitter.com/EffinBirds/status/1489980393675702281" target="_blank"><img alt="Tweet" src="https://kostyanetsky.me/notes/reuse-carefully/snap-tweet-EffinBirds-1489980393675702281.png"/></a></p>
<p class="measure-wide">Well, I try to reproduce the bug manually. And there, all of a sudden, everything is nice: the conditional appearance works as it should. Floating bug, or what? I run the auto-test again, at the right moment I jump in with the debugger and find some outright garbage: in the list of “zero” rates, besides themselves, there are a bunch of empty links!</p>
<p class="measure-wide">Frankly speaking, I was scratching the back of my head. The document receives this list from the common module with <a class="link blue dim bb" href="https://gist.github.com/vkostyanetsky/5ec036ee148606aad9caefbc9305bfb0" target="_blank">this code</a>. An empty ref from here, even theoretically, cannot be obtained. Moreover, the module has the “Reuse Return Values” option ​​enabled, and the function is actually executes once somewhere at the beginning of the test, before all complex data manipulations. So, the test cannot affect it in any way, in theory.</p>
<p class="measure-wide">Is it a dead end? Well, experienced colleagues have probably already guessed everything, but I had to dance around the bug  and even check the <a class="link blue dim bb" href="https://its.1c.ru/db/v8std/content/724/hdoc" target="_blank">standard</a>, until got the following: <strong>return values ​​cache in 1C can be changed</strong>. I mean, not by calling RefreshReusableValues​​(), but by changing reusable values directly.</p>
<p class="measure-wide">How? Well, if you get some values ​​from a cached common module, and they are not of a primitive type (string, number, etc.), you will not get the value itself, but a pointer to it somewhere in memory. You write this pointer to a variable and try to change it – you change the cache.</p>
<p class="measure-wide">It's that simple, yes. This is what happened in my case: the form of another document called the method that generates the list of “zero” rates. Having received a list of values, it added an empty ref to it and used it in its logic. Thus, each time this form opens, the list cache contains more and more empty refs, which eventually broke the document at the other end of the configuration.</p>
<p class="measure-wide"><a href="https://twitter.com/EffinBirds/status/1488165946342662144" target="_blank"><img alt="Tweet" src="https://kostyanetsky.me/notes/reuse-carefully/snap-tweet-EffinBirds-1488165946342662144.png"/></a></p>
<p class="measure-wide">In a good way, the platform should throw exceptions when developer trying to change the cache, but until this happens, you have to take care yourself. For example, when developing cached modules, return immutable data types from them (FixedStructure instead of Structure, FixedArray instead of Array, and so on). True, this is not a 100% protection: firstly, fixed types are not applicable everywhere, and secondly, even in the latest versions of the SSL, this is far from being done everywhere. Do you know many configurations not based on SSL?</p>
<p class="measure-wide">Sonar also know nothing about the problem, as well as less popular software. No silver bullet, in short – check your code, look at the code of your colleagues and try not to forget about another elegant way to bang ourselves in the foot.</p></description>
        </item>
        
    </channel>
</rss>