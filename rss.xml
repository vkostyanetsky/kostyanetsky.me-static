<rss version="2.0">
    <channel>    
        <title>Vlad Kostyanetsky</title>
        <description>Hello! My name is Vlad, I'm business app developer.</description>
        <language>en</language>
        <link>https://kostyanetsky.me</link>
        <lastBuildDate>Sat, 30 Oct 2021 17:14:56 +0700</lastBuildDate>
        
        <item>
            <title>Matryoshka</title>
            <link>https://kostyanetsky.me/notes/matryoshka</link>
            <guid isPermaLink="false">note-matryoshka</guid>
            <pubDate>Sat, 30 Oct 2021 17:14:56 +0700</pubDate>
            <description><p>A few days ago, there was a link to 1Ci certificate in the team chat (a colleague passed their junior <a href="https://academy.1ci.com/courses/1c-junior-developer" target="_blank">course</a>). I go over and see no auth form, no errors — I just get a PDF file. Everything is OK, right? Well, then I open the file:</p>
<p><img alt="Error.pdf" src="https://kostyanetsky.me/notes/matryoshka/not-your-certificate.png"/></p>
<p>Honestly, I am even delighted. We need to implement this UX in our products: you press, for example, the “print” button for a document, and it gives you a PDF! And inside it — a link to another PDF! And inside it — “entity is not filled”, so go fill.</p>
<p>You can sell it as a Russian way of dealing with errors. This is, like, for historical reasons! Blame all the damned matryoshkas, and <a href="https://en.wikipedia.org/wiki/Koschei" target="_blank">Koschei</a> with his needle. It is, as you remember, in the egg, and it is in the duck, which is in the rabbit, tucked into the chest, and further along the chain of nesting.</p></description>
        </item>
        
        <item>
            <title>Diablo</title>
            <link>https://kostyanetsky.me/notes/diablo</link>
            <guid isPermaLink="false">note-diablo</guid>
            <pubDate>Wed, 22 Sep 2021 21:25:48 +0700</pubDate>
            <description><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/kVd6qeWoAxg" width="560"></iframe>
<p>The nice episode of the “We Are Doomed” IT podcast about developer burnout. No insights, but you can hear something useful for yourself. I liked the analogy with video games, somewhere close to the middle:</p>
<blockquote>
<p>There was such a game — Diablo. RPG, all sorts of spells, you know. A character has mana and health, and when you have no mana to cast… Ha, I sound like a nerd! Well, nevermind. Briefly speaking, when you have no mana to cast, it's taken from your health.</p>
<p><em>— Doctor Cat</em></p>
</blockquote></description>
        </item>
        
        <item>
            <title>A Script to Sync With NAS</title>
            <link>https://kostyanetsky.me/notes/rclone-abuser</link>
            <guid isPermaLink="false">note-rclone-abuser</guid>
            <pubDate>Mon, 07 Jun 2021 19:04:48 +0700</pubDate>
            <description><p>I posted on GitHub a Python <a href="https://github.com/vkostyanetsky/RCloneAbuser" target="_blank">script</a> which I use to sync files between my PC and a NAS. I have a Synology DS220j; a lot of software comes with it, including a backup utility. However, it seems to have been made for show only: the program began to fail even at the setup stage, so I lost confidence in it pretty fast.</p>
<p>I suffered with the problem for some time and eventually returned to the good old <a href="https://rclone.org" target="_blank">rclone</a>, which has only two problems for me. Firstly, I can't normally connect to an SMB share: yes, the login and password can be saved in Windows and rclone will use them, but OS will forget it as soon as possible. I got out of the situation by connecting my NAS as an external drive.</p>
<p>Secondly, I had many files and folders to sync: a directory here, a directory there, a config from there, a profile from here… In order not to produce spaghetti code, I wrote a simple script that takes sources and receivers from a config file, and then executes rclone for each pair.</p></description>
        </item>
        
        <item>
            <title>HPMoR Printing</title>
            <link>https://kostyanetsky.me/notes/hpmor-printing</link>
            <guid isPermaLink="false">note-hpmor-printing</guid>
            <pubDate>Sun, 22 Jul 2018 19:00:55 +0700</pubDate>
            <description><p>Perhaps you already know that Eliezer Yudkowsky's “Methods of Rationality” in Russian is going to be published as a standard book (thanks to “Evolution” and other information partners), but I still want to remind again.</p>
<p>The book is really good, I had <a href="https://kostyanetsky.me//notes/hpmor" target="_blank">written</a> about it a couple of years ago. It teaches useful things in such an attractive way that it's really hard to stop reading. The whole text is in public access, but if you want a hard copy — you can <a href="https://planeta.ru/campaigns/hpmor" target="_blank">make a request</a> now.</p></description>
        </item>
        
        <item>
            <title>Cookie Jar</title>
            <link>https://kostyanetsky.me/notes/cookie-jar</link>
            <guid isPermaLink="false">note-cookie-jar</guid>
            <pubDate>Sat, 28 May 2022 21:34:38 +0700</pubDate>
            <description><p>The other day, I was working with cookies in one of my scripts. While searching for the optimal solution, I came across an absolutely charming (100% working, by the way) <a href="https://stackoverflow.com/questions/13030095/how-to-save-requests-python-cookies-to-a-file" target="_blank">tip</a> from StackOverflow:</p>
<blockquote>
<p>You can get a CookieJar object from the session with session.cookies, and use pickle to store it to a file.</p>
</blockquote>
<p>So, literally: keep your cookies in a jar, and to store them, pickle them. The jar with pickled cookies, by the way, can be put on the shelf later.</p>
<p>How can you not love python after that, huh?</p>
<p>P.S. While writing this post, I got curious – why pickle and not serialization? So, briefly: <a href="https://stackoverflow.com/questions/27324986/pickles-why-are-they-called-that/27325007#27325007" target="_blank">this is the way</a>.</p></description>
        </item>
        
        <item>
            <title>Nerd View</title>
            <link>https://kostyanetsky.me/notes/nerdview</link>
            <guid isPermaLink="false">note-nerdview</guid>
            <pubDate>Mon, 19 Oct 2020 18:35:56 +0700</pubDate>
            <description><p><img alt="A chat with my daughter" src="https://kostyanetsky.me/notes/nerdview/telegram.png"/></p>
<p>On the screenshot above my little one is just letting me know where she is: walking down the street, at the school, at a playground. It's not her fault that I have a sort of nerd view: when I look at this chat I see nothing but code on Gherkin, which is just a bit broken. A little patch here and there and it will be fine :-)</p>
<pre><code>And I exit home
Then I enter school
And I exit school
Then I gonna swing
</code></pre>
<p>We use Gherkin to write our autotests for <a href="https://github.com/Pr-Mex/vanessa-automation" target="_blank">Vanessa Automation</a>. I can't say I've made very many of them, especially in comparison with some of my colleagues… Well, it seems like I've made them enough to twist the reality a few.</p></description>
        </item>
        
        <item>
            <title>REST service for Service Manager</title>
            <link>https://kostyanetsky.me/notes/rest-service-4-sm</link>
            <guid isPermaLink="false">note-rest-service-4-sm</guid>
            <pubDate>Sat, 25 Feb 2023 19:02:49 +0700</pubDate>
            <description><p>This week, I developed a REST service to set up our service manager (this is a configuration for managing a 1cFresh instance). Deploying the development environment is a regular task for us, and every time the manager's database had to be tuned by hand: tweaking the storefront, changing application addresses, overwriting scheduled tasks, and so on.</p>
<p>The implementation was simple. Come up with a JSON structure, write a parser, find a code in the configuration, make it work by external call, and make sure you don't break anything. Routine work, in general, but I love to do such things from time to time: I mean, to look around and try to figure out which of the daily tasks is annoying enough.</p>
<p>This one is a good example. To be frank, setting up the Service Manager wasn't a problem (launching the app and fiddling with the settings), but it was a thing to pay attention &amp; spend time to. What do we have now:</p>
<ol>
<li>There is a JSON file with all the settings;</li>
<li>There is a REST service for its processing;</li>
<li>There is a script that will put the first into the second;</li>
<li>There is a pipeline that will do it all by itself.</li>
</ol>
<p>In short, a boot was rubbing a leg, and now it isn't. Yahoo!</p></description>
        </item>
        
        <item>
            <title>HPMoR</title>
            <link>https://kostyanetsky.me/notes/hpmor</link>
            <guid isPermaLink="false">note-hpmor</guid>
            <pubDate>Sun, 06 Nov 2016 15:32:00 +0700</pubDate>
            <description><p>Just finished reading “Harry Potter and Methods of Rationality” — the epic fanfic based on the you-know-whose universe. An author is a tough specialist in the field of artificial intelligence and interesting on his own, but his book is what I insistently <a href="http://hpmor.com/" target="_blank">recommend</a> to read.</p>
<p>First of all, it is the magnificent rethinking of the original saga. Many aspects seem not less fascinating, I may say; moreover, the plot itself is certainly excellent — I read two-thirds of the story without switching <a href="https://kostyanetsky.me/notes/hpmor/gene-wilder-meme.jpg" target="_blank">Gene Wilder</a> off :-) Nevertheless, the author was skillful enough to make all points meet and finish a storyline in such a pretty way that I had almost nothing to complain about.</p>
<p>In any case, this book is a well way to meet with a lot of scientific and just interesting things which were mentioned along the way. The author is smart and his book is a smart one too.</p></description>
        </item>
        
        <item>
            <title>Group Work in Google Docs</title>
            <link>https://kostyanetsky.me/notes/anonymous-quokka</link>
            <guid isPermaLink="false">note-anonymous-quokka</guid>
            <pubDate>Sun, 18 Sep 2022 16:25:48 +0700</pubDate>
            <description><p>For the last month I have been rewriting standard data exchange between FirstBit ERP and Bitrix for a client task. Co-workers doing the same on the Bitrix side prepared a huge mapping for this case: which field on the 1C side should be transferred to which Bitrix field (and vice versa).</p>
<p>They published this mapping as Google Docs tables, in the interface of which you can see users using any document at this moment — both logged in and anonymous. Anonymous ones traditionally are displaying as <a href="https://support.google.com/docs/answer/2494888?hl=en" target="_blank">animals</a>.</p>
<p>Colleagues generally prefer to work anonymously. As a result, I definetely used to feel like a Disney princess: you start working in the morning, and anonymous quokkas, penguins and chinchillas roll out from everywhere :-)</p></description>
        </item>
        
        <item>
            <title>Message to User</title>
            <link>https://kostyanetsky.me/notes/message-to-user</link>
            <guid isPermaLink="false">note-message-to-user</guid>
            <pubDate>Mon, 30 Apr 2018 09:37:18 +0700</pubDate>
            <description><p>1C:Enterprise has a convenient and accustomed method of showing information for a user — it's a UserMessage object. It outputs messages at the bottom of a form and suddenly it's a potential problem. The thing is, most users don't look at it. It's like: well, I see no critical errors for now so there is nothing to worry about.</p>
<p>Therefore, in case an error happens or you just have an essential message, you should show it through a dialogue window — by the ShowQueryBox() method or a ShowMessageBox() method, for example. Otherwise, a user may not notice a problem and continue to work in spite of some action might not be executed or might be executed in a wrong way. The issue will come out later and you will be rightfully blamed for it.</p>
<p>In addition, using of a UserMessage object should be prohibited in case of small service forms. Yes, in fact, it's hard to overlook a text if a window is small, but that's a different matter: the messages below literally <a href="https://kostyanetsky.me/notes/message-to-user/en.png" target="_blank">devour</a> form's workspace and it becomes hard to work with.</p></description>
        </item>
        
    </channel>
</rss>