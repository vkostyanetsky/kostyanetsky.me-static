<rss version="2.0">
    <channel>    
        <title>Vlad Kostyanetsky</title>
        <description>Hello! My name is Vlad, I'm business app developer.</description>
        <language>en</language>
        <link>https://kostyanetsky.me</link>
        <lastBuildDate>Tue, 13 Feb 2024 01:08:58 +0700</lastBuildDate>
        
        <item>
            <title>Fastimer for Obsidian</title>
            <link>https://kostyanetsky.me/notes/obsidian-fastimer</link>
            <guid isPermaLink="false">note-obsidian-fastimer</guid>
            <pubDate>Tue, 13 Feb 2024 01:08:58 +0700</pubDate>
            <description><p>The <a href="https://obsidian.md/" target="_blank">Obsidian </a> developers recently approved one of my TypeScript pet plugins — <a href="https://github.com/vkostyanetsky/ObsidianFastimer" target="_blank">Fastimer</a>. It is an intermittent fasting tracker that adds a new code block to your vault: you enter the start date of the fasting interval and get the date of its finish, the time until this moment, and a list of the zones to be passed.</p>
<p>The block shows an up-to-date picture every time Obsidian renders it, which means you can monitor your progress in real time. When a fasting window ends, you can enter the end date, and the code block will show the result: whether you managed to achieve the goal, how much time you fasted beyond the plan, and so on.</p>
<p>I'm thinking of improving the visual part a bit (currently, everything is displayed as plain text without any design). In addition, I want to add functions for calculating statistics so that you can draw cute graphs like <a href="https://charts.phib.ro/Meta/Charts/Charts+Documentation" target="_blank">Charts </a> and show achievements. I already made the same in implementing the same <a href="https://github.com/vkostyanetsky/Fastimer" target="_blank">application</a> in Python, but I’m unlikely to return to it — it’s easier to solve the task in the Obsidian vault than to roll out an additional utility.</p>
<p>In short, check out the plugin! :) You can find it by name (Fastimer) in the Obsidian library, or install it manually from the repository.</p></description>
        </item>
        
        <item>
            <title>Do? Do Not?</title>
            <link>https://kostyanetsky.me/notes/do-not</link>
            <guid isPermaLink="false">note-do-not</guid>
            <pubDate>Sun, 14 Jan 2024 22:25:45 +0700</pubDate>
            <description><p>Among our projects, we have one where two systems are communicating with each other: ERP and CRM. Data exchange is done well: a push'n'pull server has been set up, subscriptions to events have been registered, a REST API has been implemented, and so on. There are many other fascinating technical details, but I'm not talking about that now.</p>
<p>The exchange has various logic chains inside. For instance, if a new company appears in CRM, it sends the data to ERP. The other day, a problem appeared with this: a company was not sent from the CRM, no matter how many times you tried to write it. So we went to investigate, suspecting the worst: CRM is written in PHP (nothing personal; it’s just not our technical stack), and there’s a lot of different legacy stuff there. It's easier to shoot yourself in the foot than to blow your nose.</p>
<p>However, it didn't take much digging. We opened the company’s page in CRM and saw that he had the “Do Not Export To ERP” checkbox, which, in fact, blocked the sending. A manager made an obvious mistake.</p>
<p>Should we uncheck the box and close the ticket?</p>
<p><img alt="Well yes, but actually no" src="https://kostyanetsky.me/notes/do-not/actually.jpg"/></p>
<p>This will solve the problem with that particular company, but not the reason it appeared. It is actually in the interface, specifically in the name of the option: “do not” is used, which is advisable to avoid due to the fact that it is more difficult for users to read the wording correctly. By the way, this also applies to a simple “do”.</p>
<p>It is often difficult for programmers to understand why this is so: we are used to instantly calculating Boolean expressions in our heads, and variations like “not (not true)” are commonplace for us. But people with a different background can get confused. Just a little, but sometimes this is enough for them to perceive “do not export” as “do export” in the heat of the day, click the option, and move on.</p>
<p>To sum up, the solution is to rename the checkbox. “Disable Export” or “Stop Export” are both fine, for example. “Prohibit Export” also comes to mind, but it’s more about interpersonal relationships, and in general, a ban on doing something does not mean that it won’t be done :)</p></description>
        </item>
        
        <item>
            <title>Last Meth</title>
            <link>https://kostyanetsky.me/notes/last-meth</link>
            <guid isPermaLink="false">note-last-meth</guid>
            <pubDate>Sun, 17 Dec 2023 19:34:42 +0700</pubDate>
            <description><p>I'm digging into the code of an external component for 1C platform, published by its developers as an example. The good thing is: well, it can be compiled and if you tweak it a little — it does the job.</p>
<p>As for other things, there are a lot of bruh moments. For example, the project can't be opened in modern Visual Studio (you need to specify CMake manually). The code is quite sloppy; there is no documentation, comments, or formatting. Long story short: I believe, it can be difficult for a developer without solid experience in C++ to get the hang of this.</p>
<p>Was a bit amused by the naming in the code below:</p>
<pre><code>long CAddInNative::FindMethod(const WCHAR_T* wsMethodName)
{ 
    long plMethodNum = -1;
    wchar_t* name = 0;

    ::convFromShortWchar(&amp;name, wsMethodName);

    plMethodNum = findName(g_MethodNames, name, eMethLast);

    if (plMethodNum == -1)
        plMethodNum = findName(g_MethodNamesRu, name, eMethLast);

    delete[] name;

    return plMethodNum;
}
</code></pre>
<p>I see here the inexplicable love for abbreviations. What made the author name the variable “eMethLast”, not “eMethodLast”? They already created "wsMethodName" and "plMethodNum", after all.</p>
<p>Perhaps this is an Easter egg with a reference to Breaking Bad. Then I like it for sure :)</p></description>
        </item>
        
        <item>
            <title>Wrong Freeway Entrance</title>
            <link>https://kostyanetsky.me/notes/wrong-freeway-entrance</link>
            <guid isPermaLink="false">note-wrong-freeway-entrance</guid>
            <pubDate>Tue, 14 Nov 2023 09:34:10 +0700</pubDate>
            <description><blockquote>
<p>Have you ever taken the wrong freeway entrance? You need to drive to the next exit to turn around, but you hate every inch of travel because you're going away from your goal.</p>
<p><em>― Andy Weir, "The Martian"</em></p>
</blockquote>
<p>Programmers have exactly the same emotions when they spend a long time working on something. They suddenly realize that part of it should be designed differently. Moreover, this is exactly what you have to do since it solves several problems at once. This is where technical debt is born. </p>
<p>However, right now you don’t change anything but continue to work with the part of the code that already exists. After all, you are professional, and you have a release date! You have to make it on time and then pay the debt, but you hate every inch of code you write because you're going away from your goal.</p></description>
        </item>
        
        <item>
            <title>Everyday Heroism</title>
            <link>https://kostyanetsky.me/notes/how-to-be-a-hero</link>
            <guid isPermaLink="false">note-how-to-be-a-hero</guid>
            <pubDate>Sun, 24 Sep 2023 23:06:30 +0700</pubDate>
            <description><p>Some time ago, I was setting up <a href="https://swagger.io" target="_blank">Swagger</a> for the internal API. While I was fiddling around, it became clear that some functionality did not need to be included in the documentation. I was looking for a way to do this without crutches and came across a funny <a href="https://github.com/tiangolo/full-stack-fastapi-couchbase/issues/10" target="_blank">question</a> on GitHub.</p>
<p>What's funny, you ask? Well, I involuntarily remembered <a href="https://forum.mista.ru" target="_blank">Mista</a>. Among 1C developers, this is synonymous with the word “toxicity”: if you ask anything there, you get a bucket of slop by the collar instead of an answer. Here, of course, everything is not so neglected, but holy crap! These persistent guys who referring to the 14-page manual made me laugh a lot.</p>
<p>One thing is good: by the end of the thread, there appeared a brave rebel who just answered the question. They, like, named the required parameter for a FastAPI method's decorator, which is not supposed to be shown in the documentation. No links — could you imagine?</p>
<p>Not all heroes wear capes, I would say.</p></description>
        </item>
        
        <item>
            <title>Romania&#x27;s Feature</title>
            <link>https://kostyanetsky.me/notes/crossed</link>
            <guid isPermaLink="false">note-crossed</guid>
            <pubDate>Wed, 30 Aug 2023 01:02:24 +0700</pubDate>
            <description><p>Making a password recover function via SMS for our customer portal. Got to the Twilio <a href="https://support.twilio.com/hc/en-us/articles/223133767-International-support-for-Alphanumeric-Sender-ID" target="_blank">documentation</a> related to <a href="https://www.twilio.com/docs/glossary/what-alphanumeric-sender-id" target="_blank">alphanumeric sender ID</a> support in different countries; this feature allows you to send messages so that the recipient sees not the sender's number but something meaningful (a company name, for example).</p>
<p>The feature is regulated differently everywhere: in some countries it just works, but in others registration is possible or even required.</p>
<p>Well, let's take a look:</p>
<p><img alt="Screenshot" src="https://kostyanetsky.me/notes/crossed/twilio.png"/></p>
<p>🤔</p>
<ul>
<li>Portugal: yes</li>
<li>Puerto Rico: no</li>
<li>Qatar: yes (with registration)</li>
<li>Reunion: yes</li>
<li>Romania: yes (with registration) (but be afraid of Dracula)</li>
</ul>
<p>I don’t know how else I can explain this cemetery.</p>
<p>UPD: Found the answer. Grave crosses mean you have to pay $700 to register.</p>
<p>To be frank, I like the explanation about Dracula much more.</p></description>
        </item>
        
        <item>
            <title>New Fastimer</title>
            <link>https://kostyanetsky.me/notes/fastimer-1-3-1</link>
            <guid isPermaLink="false">note-fastimer-1-3-1</guid>
            <pubDate>Wed, 23 Aug 2023 20:58:32 +0700</pubDate>
            <description><p>Released a new <a href="https://github.com/vkostyanetsky/Fastimer/releases/tag/v1.3.1" target="_blank">version</a> of my console timer for <a href="https://en.wikipedia.org/wiki/Intermittent_fasting" target="_blank">intermittent fasting</a>. I wrote this app about a year ago, when I was once again upset by the <a href="https://www.zerolongevity.com/" target="_blank">Zero</a> application for Android: some very primitive functions (like viewing a specific interval) did not work. Oh my gosh, guys, you had one job!</p>
<p>The main difference between 1.3.1 and 1.2.3 is that the console menu has been cut to hell in favor of the good old arguments and options. The menu concept looks convenient only if an application has few features. However, as soon as you take a step forward, the need to answer a list of questions each time you need something starts to irritate you.</p></description>
        </item>
        
        <item>
            <title>Request Rheostat</title>
            <link>https://kostyanetsky.me/notes/request-rheostat</link>
            <guid isPermaLink="false">note-request-rheostat</guid>
            <pubDate>Sat, 27 May 2023 13:20:05 +0700</pubDate>
            <description><p>I forgot to tell you that a couple of months ago I <a href="https://github.com/vkostyanetsky/RequestRheostat" target="_blank">posted</a> on GitHub an example of code that limits the number of requests per second that can be sent to some third-party resource from a 1C:Enterprise infobase.</p>
<p>The problem is solved through a constant that stores the date for the current second and the number of requests that have already been sent. Clients who run into a limitation are waiting. The queue is not guaranteed, but is more or less respected.</p>
<p>It can be useful for managing the load on an external system. For example, the cloud-based Bitrix24 requires not to send requests to it more than twice per second, and if you exceed it, it bans you.</p></description>
        </item>
        
        <item>
            <title>Do you speak English?</title>
            <link>https://kostyanetsky.me/notes/do-you-speak-english</link>
            <guid isPermaLink="false">note-do-you-speak-english</guid>
            <pubDate>Sun, 14 May 2023 10:15:16 +0700</pubDate>
            <description><p>The repository login form of the current platform (8.3.22.1923, to be precise) launched with the English interface:</p>
<p><img alt="Login Form" src="https://kostyanetsky.me/notes/do-you-speak-english/login-form.png"/></p>
<p>You had one job, literally.</p>
<p>I heard some rumors that development of the Designer was stopped largely due to the monstrous amount of technical debt that slows down any new features. But here are interface glitches right on one of the first application windows! Curious how it got through the build tests.</p>
<p>Maybe they don't exist at all.</p></description>
        </item>
        
        <item>
            <title>Going Postal</title>
            <link>https://kostyanetsky.me/notes/going-postal</link>
            <guid isPermaLink="false">note-going-postal</guid>
            <pubDate>Mon, 08 May 2023 09:12:34 +0700</pubDate>
            <description><p>Recently, I was working with vocabulary in an attempt to describe my latest adventures to an English-speaking friend and got to know about the colorful idiom “to go postal”. It means something like “go crazy with anger”; appeared somewhere between the 80s and 90s in the USA after a series of rather <a href="https://en.wikipedia.org/wiki/Going_postal" target="_blank">insane incidents</a> in which postal workers went crazy and attacked people around, including colleagues and visitors.</p>
<p>The expression sounds funny at first glance, but the story behind the scenes is painfully gloomy. I think I will continue to use the good old “to go ballistic”. Literally, “get angry that strong so you become a rocket which lost control”. Or, to simplify, “explode with anger”.</p>
<p>By the way, there are similar rocket-like connotations in Russian, but for some reason they are about a more manageable cases. Mostly, they implies something like "the fire in the ass was so damn strong that the poor guy left Earth and successfully landed on Mars". Sounds a bit better than a simple explosion — you didn't completely waste the precious resource, at least :-)</p></description>
        </item>
        
    </channel>
</rss>